package com.example.employeeperformance.controller;
import com.example.employeeperformance.model.Employee;
import com.example.employeeperformance.service.EmployeeService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/employees")
public class EmployeeController {
    private final EmployeeService employeeService;

    public EmployeeController(EmployeeService employeeService) {
        this.employeeService = employeeService;
    }

    @GetMapping
    public List<Employee> getAllEmployees() {
        return employeeService.getAllEmployees();
    }

    @GetMapping("/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
        return employeeService.getEmployeeById(id)
            .map(ResponseEntity::ok)
            .orElseGet(() -> ResponseEntity.notFound().build());
    }

    @PostMapping(path = "/add", consumes = "application/json")
    public ResponseEntity<Employee> addEmployee(@RequestBody Employee employee) {
        return ResponseEntity.ok(employeeService.addEmployee(employee));
    }

    @PutMapping(path = "/{id}", consumes = "application/json")
    public ResponseEntity<Employee> updateEmployee(@PathVariable Long id, @RequestBody Employee updatedEmployee) {
        updatedEmployee.setId(id);
        return ResponseEntity.ok(employeeService.updateEmployee(id, updatedEmployee));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteEmployee(@PathVariable Long id) {
    String confirmationMessage = employeeService.deleteEmployee(id);
    return ResponseEntity.ok(confirmationMessage);
    }

    @GetMapping("/distribution")
    public ResponseEntity<List<Map<String, Object>>> getDetailedDistribution() {
        return ResponseEntity.ok(employeeService.getDetailedDistribution());
    }

    @GetMapping("/actual-percentage")
    public ResponseEntity<Map<String, Double>> getActualPercentage() {
        return ResponseEntity.ok(employeeService.calculateActualPercentage());
    }

    @GetMapping("/deviation")
    public ResponseEntity<Map<String, Double>> getDeviation() {
        return ResponseEntity.ok(employeeService.calculateDeviation());
    }

    @GetMapping("/suggestions")
    public ResponseEntity<List<String>> getSuggestions() {
        return ResponseEntity.ok(employeeService.suggestEmployeesForRevision());
    }
}




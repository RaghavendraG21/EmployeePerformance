package com.example.employeeperformance.controller;

import com.example.employeeperformance.model.Employee;
import com.example.employeeperformance.service.EmployeeService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;
import java.util.Optional;

@RestController
@RequestMapping("/employees")
public class EmployeeController {
    private final EmployeeService employeeService;

    public EmployeeController(EmployeeService employeeService) {
        this.employeeService = employeeService;
    }

    @GetMapping
    public List<Employee> getAllEmployees() {
        return employeeService.getAllEmployees();
    }

    @GetMapping("/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
        Optional<Employee> employee = employeeService.getEmployeeById(id);
        return employee.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
    }

    @PostMapping("/add")
    public ResponseEntity<Employee> addEmployee(@RequestParam String name, @RequestParam String department, @RequestParam String rating) {
        Employee employee = new Employee();
        employee.setName(name);
        employee.setDepartment(department);
        employee.setRating(rating);
        return ResponseEntity.ok(employeeService.addEmployee(employee));
    }

    @PostMapping("/update")
    public ResponseEntity<Employee> updateEmployee(@RequestParam Long id, @RequestParam(required = false) String name, @RequestParam(required = false) String department, @RequestParam(required = false) String rating) {
        Employee updatedEmployee = new Employee();
        updatedEmployee.setName(name);
        updatedEmployee.setDepartment(department);
        updatedEmployee.setRating(rating);
        return ResponseEntity.ok(employeeService.updateEmployee(id, updatedEmployee));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteEmployee(@PathVariable Long id) {
        employeeService.deleteEmployee(id);
        return ResponseEntity.noContent().build();
    }

    @GetMapping("/distribution")
    public ResponseEntity<List<Map<String, Object>>> getDetailedDistribution() {
        return ResponseEntity.ok(employeeService.getDetailedDistribution());
    }
}
